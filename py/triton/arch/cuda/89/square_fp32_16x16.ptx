//
// Generated by LLVM NVPTX Back-End
//

.version 8.0
.target sm_89
.address_size 64

	// .globl	square_0123

.visible .entry square_0123(
	.param .u64 square_0123_param_0,
	.param .u64 square_0123_param_1,
	.param .u32 square_0123_param_2,
	.param .u32 square_0123_param_3
)
.maxntid 256, 1, 1
{
	.reg .pred 	%p<5>;
	.reg .b32 	%r<15>;
	.reg .f32 	%f<3>;
	.reg .b64 	%rd<6>;

	ld.param.u64 	%rd3, [square_0123_param_0];
	ld.param.u64 	%rd4, [square_0123_param_1];
	mov.u32 	%r3, %tid.x;
	and.b32  	%r4, %r3, 15;
	ld.param.u32 	%r5, [square_0123_param_2];
	ld.param.u32 	%r6, [square_0123_param_3];
	bfe.u32 	%r7, %r3, 4, 4;
	mov.u32 	%r8, %ctaid.x;
	mov.u32 	%r9, %ctaid.y;
	shl.b32 	%r10, %r8, 4;
	or.b32  	%r11, %r10, %r4;
	shl.b32 	%r12, %r9, 4;
	or.b32  	%r13, %r7, %r12;
	mad.lo.s32 	%r14, %r13, %r5, %r11;
	setp.lt.s32 	%p3, %r13, %r6;
	setp.lt.s32 	%p4, %r11, %r5;
	and.pred  	%p1, %p4, %p3;
	mul.wide.s32 	%rd5, %r14, 4;
	add.s64 	%rd1, %rd4, %rd5;
	mov.u32 %r1, 0x0;
	@%p1 ld.global.b32 { %r1 }, [ %rd1 + 0 ];
	mov.b32 	%f1, %r1;
	add.s64 	%rd2, %rd3, %rd5;
	mul.f32 	%f2, %f1, %f1;
	mov.b32 	%r2, %f2;
	@%p1 st.global.b32 [ %rd2 + 0 ], { %r2 };
	ret;

}
